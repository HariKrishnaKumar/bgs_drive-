from fastapi import FastAPI, Request
from fastapi.responses import FileResponse, JSONResponse
from fastapi.staticfiles import StaticFiles
import os
import pyotp

app = FastAPI()

# --- Security and Data ---
# IMPORTANT: Paste the secret key generated by setup_2fa.py here.
SECRET_KEY = "HRBAD7S3H2I7SQDFBWV4UTFAINFLHBHA"
totp = pyotp.TOTP(SECRET_KEY)

# This list will now act as our in-memory "database" for files.
# It starts empty and gets filled by the admin.
FILES_DATABASE = []

# --- Path to your frontend folder ---
FRONTEND_DIR = os.path.join(os.path.dirname(__file__), "frontend")
app.mount("/static", StaticFiles(directory=os.path.join(FRONTEND_DIR, "static")), name="static")


# --- API Endpoints ---

@app.post("/api/login")
async def login(request: Request):
    """Handles admin login with email, password, and OTP."""
    data = await request.json()
    email = data.get("email")
    password = data.get("password")
    otp = data.get("otp")

    # --- START OF DEBUG CODE ---
    print("--- Login Attempt ---")
    
    # 1. Check if the password is correct
    is_password_correct = (email == "myadmin@bgs.com" and password == "BgsDrive@2025") # Make sure this matches your credentials
    print(f"Email/Password Correct: {is_password_correct}")

    # 2. Check if the OTP is valid
    is_otp_valid = totp.verify(otp)
    print(f"OTP Valid: {is_otp_valid}")
    # --- END OF DEBUG CODE ---

    if is_password_correct and is_otp_valid:
        print("Login Successful!")
        return JSONResponse({"success": True, "message": "Login successful"})
    else:
        print("Login Failed.")
        return JSONResponse({"success": False, "message": "Invalid credentials or OTP"}, status_code=401)


@app.get("/api/files")
def get_files():
    """Provides the file list to both admin and client pages."""
    return JSONResponse(content=FILES_DATABASE)


@app.post("/api/files")
async def add_file(request: Request):
    """Receives a new file from the admin page and adds it to our database."""
    new_file = await request.json()
    FILES_DATABASE.append(new_file)
    print(f"Added new file: {new_file['name']}")
    return JSONResponse({"success": True, "message": "File added successfully"})


# --- Page Serving ---

@app.get("/")
def get_login_page():
    """Serves the main login page."""
    return FileResponse(os.path.join(FRONTEND_DIR, "static", "index.html"))


@app.get("/admin")
def get_admin_page():
    """Serves the admin interface after a successful login."""
    return FileResponse(os.path.join(FRONTEND_DIR, "static", "admin.html"))


@app.get("/client")
def get_client_page():
    """Serves the simplified client download page."""
    return FileResponse(os.path.join(FRONTEND_DIR, "static", "client.html"))